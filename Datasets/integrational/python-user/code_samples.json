[
  {
    "id": 1,
    "code": "\nimport os\nimport json\nfrom flask import make_response\nfrom flask import Flask\nfrom werkzeug.exceptions import NotFound, ServiceUnavailable\nimport json\nimport requests\n\n\ndef root_dir():\n    return os.path.dirname(os.path.realpath(__file__ + '/..'))\napp = Flask(__name__)\n\nwith open('{}/database/users.json'.format(root_dir()), 'r') as f:\n    users = json.load(f)\n\n\n@app.route('/', methods=['GET'])\ndef hello():\n    return nice_json({\n        'uri': '/',\n        'subresource_uris': {\n            'users': '/users',\n            'user': '/users/<username>',\n            'bookings': '/users/<username>/bookings',\n            'suggested': '/users/<username>/suggested'\n        }\n    })\n\n\n@app.route('/users', methods=['GET'])\ndef users_list():\n    return nice_json(users)\n\n\n@app.route('/users/<username>', methods=['GET'])\ndef user_record(username):\n    if username not in users:\n        raise NotFound\n\n    return nice_json(users[username])\n\n\n@app.route('/users/<username>/bookings', methods=['GET'])\ndef user_bookings(username):\n    if username not in users:\n        raise NotFound(\"User '{}' not found.\".format(username))\n\n    try:\n        users_bookings = requests.get('http://127.0.0.1:5003/bookings/{}'.format(username))\n    except requests.exceptions.ConnectionError:\n        raise ServiceUnavailable('The Bookings service is unavailable.')\n\n    if users_bookings.status_code == 404:\n        raise NotFound('No bookings were found for {}'.format(username))\n\n    users_bookings = users_bookings.json()\n\n    # For each booking, get the rating and the movie title\n    result = {}\n    for date, movies in users_bookings.iteritems():\n        result[date] = []\n        for movieid in movies:\n            try:\n                movies_resp = requests.get('http://127.0.0.1:5001/movies/{}'.format(movieid))\n            except requests.exceptions.ConnectionError:\n                raise ServiceUnavailable('The Movie service is unavailable.')\n            movies_resp = movies_resp.json()\n            result[date].append({\n                'title': movies_resp['title'],\n                'rating': movies_resp['rating'],\n                'uri': movies_resp['uri']\n            })\n\n    return nice_json(result)\n\n\n@app.route('/users/<username>/suggested', methods=['GET'])\ndef user_suggested(username):\n    raise NotImplementedError()\n\ndef run(app):\n    app.run(port=5000, debug=True)\n\ndef root_dir():\n    return os.path.dirname(os.path.realpath(__file__ + '/..'))\n\n\ndef nice_json(arg):\n    response = make_response(json.dumps(arg, sort_keys = True, indent=4))\n    response.headers['Content-type'] = 'application/json'\n    return response\n"
  }
]